/*
 * This is the application and entity model for university elearning

application {
  config {
    jhipsterVersion 6.0.1,
    applicationType monolith,
    baseName DemetraElearning
    packageName com.amanganiello90.demetra,
    packageFolder com/amanganiello90/demetra,
    serverPort 8080
    cacheProvider no,
    websocket false,
    authenticationType session,
    devDatabaseType h2Memory,
    prodDatabaseType mssql,
    buildTool maven,
    searchEngine false,
    messageBroker false,
    serviceDiscoveryType false,
    testFrameworks [cucumber],
    enableSwaggerCodegen false,
    clientFramework angularX,
    clientTheme cosmo,
    clientThemeVariant primary,
    clientPackageManager yarn,
    useSass true,
    skipUserManagement false
    jhiPrefix: jhi,
    dtoSuffix: DTO,
    enableTranslation true,
    nativeLanguage it,
    languages [it, en]
  }
  entities *
}

// JDL definition for application generated with command 'jhipster export-jdl'
entity DemetraUser {
    firstName String required
    lastName String required
    gender Gender required
    email String required pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/),
    address String required,
    borndate LocalDate required,
    CF String unique required,
    autority MyAutority required
}

enum MyAutority {
    ADMIN, STUDENT, TEACHER
}

entity Degree {
	name String unique required,
    description String
}

// an ignored comment
/** not an ignored comment */
entity SingleCourse {
	name String unique required,
	description String,
	isfordegree Boolean required,
    cfu Integer
}

entity ExamAppeal{
    date Instant required,
    place String required,
    description String required
    
}

entity StudentExam{
    mark Integer,
    attainmentdate LocalDate
    
}

entity CourseNews {
	description String required
}

entity CourseMaterial {
    video Blob,
    document Blob required
}

entity PostMessage {
    description String required
    issent Boolean required,
}

entity Matriculation {
    matriculationdate LocalDate required,
    matriculationyear Integer required,
    document Blob required
    state Boolean required,
}

entity Payment {
    state Boolean required,
	amount Integer required
    description String required,
    note String 
}

relationship ManyToMany {
	Degree{singlecourse} to SingleCourse{degree}
}

relationship OneToOne {
	DemetraUser{user} to User{login} with jpaDerivedIdentifier
}


relationship OneToMany {
    DemetraUser{singlecourse} to SingleCourse{idteacher required},
    DemetraUser{postsent} to PostMessage{idsender required},
    DemetraUser{postreceived} to PostMessage{idreceiver required},
    DemetraUser{matriculation} to Matriculation{idstudent required},
    DemetraUser{studentexam} to StudentExam{idstudent required},
    
    SingleCourse{coursenews} to CourseNews{idsinglecourse required},
    SingleCourse{coursematerial} to CourseMaterial{idsinglecourse required},
    SingleCourse{examappeal} to ExamAppeal{idsinglecourse required},
    SingleCourse{matriculation} to Matriculation{idsinglecourse},
    SingleCourse{studentexam} to StudentExam{idsinglecourse required},
    
    Degree{matriculation} to Matriculation{iddegree required},
    
    Matriculation{payment} to Payment{idmatriculation required}
}



// Set pagination options
// paginate PostMessage with infinite-scroll
paginate all with pagination

// Use Data Transfert Objects (DTO)
dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
filter *
